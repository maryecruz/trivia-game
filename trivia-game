import java.awt.event.*;
import java.awt.*;
import java.swing.*;

import javax.swing.BorderFactory;

public class triviagame implements ActionListener{

    String[] questions =        {
                                        "5.0 + 4",
                                        "5.0 + 4.0",
                                        "Mickey Mouse",
                                        "c + a",
                                        "8 + 8",
                                        "4.5f +3.6f",
                                        "Java Program",
                                        "2.3f + 4",
                                        "Mary Lamb",
                                        "6 + 5"

                                };
    String [][] options =       {
                                         {"9.0, 9, 5, 25"},
                                         {"9, 9.0, 25, 5"},
                                         {"MickeyMouse, null, error, MouseMickey"},
                                         {"error, ca, 4, 25"},
                                         {"16, 15, 14, 11"},
                                         {"8.1f, 2, 8.1, 6"},
                                         {"JavaProgram, javaprogram, Javaprogram, javaProgram"},
                                         {"6.3f, 6.3, 4, 2"},
                                         {"MaryLamb, little, lamb, cool"},
                                         {"11, 12, 13, 14"}
                                };
    char[] answers =            {
                                         'A',
                                         'B',
                                         'A',
                                         'B',
                                         'A',
                                         'A',
                                         'A',
                                         'A',
                                         'A',
                                         'A'
                                };
    char guess;
    char answer;
    int index;
    int correct_guesses =0;
    int total_questions = questions.length;
    int result;
    int seconds=5;

    JFrame frame = new JFrame();
    JTextField textfield = new JTextField();
    JTextArea textarea = new JTextArea();
    JButton buttonA= new JButton();
    JButton buttonB= new JButton();
    JButton buttonC= new JButton();
    JButton buttonD= new JButton();
    JLabel answer_labelA = new JLabel();
    JLabel answer_labelB = new JLabel();
    JLabel answer_labelC = new JLabel();
    JLabel answer_labelD = new JLabel();
    JLabel time_label = new JLabel();
    JLabel seconds_left = new JLabel();
    JTextField number_right = new JTextField();
    JTextField percentage = new JTextField();

    public triviagame()         {
        
    	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(650,650);
        ((JTextField) frame.getContentPane()).setBackground(new Color(50,50,50));
        frame.setLayout(null);
        frame.setResizable(false);
       
        textfield.setBounds(0,0,650,50);
        textfield.setBackground(new Color(25,25,25));
        textfield.setForeground(new Color(25,255,0));
        textfield.setFont(new Font("Ink Free",Font.PLAIN,30));
        textfield.setBorder(BorderFactory.createBevelBorder(1));
        textfield.setHorizontalAlignment(JTextField.CENTER);
        textfield.setEditable(false);
        
        textarea.setBounds(0,0,650,50);
        textarea.setLineWrap(true);
        textarea.setWrapStyleWord(true);
        textarea.setBackground(new Color(25,25,25));
        textarea.setForeground(new Color(25,255,0));
        textarea.setFont(new Font("Ink Free",Font.PLAIN,30));
        textarea.setBorder(BorderFactory.createBevelBorder(1));
        textarea.setHorizontalAlignment(JTextField.CENTER);
        textarea.setEditable(false);
        
        buttonA.setBounds(0,100,100,100);
        buttonA.setFont(new Font("Ink Free",Font.PLAIN,30));
        buttonA.setFocusable(false);
        buttonA.addActionListener(this);
        buttonA.setText("A");
     
       
        buttonB.setBounds(0,200,100,100);
        buttonB.setFont(new Font("Ink Free",Font.PLAIN,30));
        buttonB.setFocusable(false);
        buttonB.addActionListener(this);
        buttonA.setText("B");
        
        buttonC.setBounds(0,300,100,100);
        buttonC.setFont(new Font("Ink Free",Font.PLAIN,30));
        buttonC.setFocusable(false);
        buttonC.addActionListener(this);
        buttonA.setText("C");
        
        buttonD.setBounds(0,400,100,100);
        buttonD.setFont(new Font("Ink Free",Font.PLAIN,30));
        buttonD.setFocusable(false);
        buttonD.addActionListener(this);
        buttonA.setText("D");
        
        answer_labelA.setBounds(125,100,500,100);
        answer_labelA.setBackground(new Color(50,50,50));
        answer_labelA.setBackground(new Color(25,255,0));
        answer_labelA.setFont(new Font("Ink Free",Font.PLAIN,30));
        
        answer_labelB.setBounds(125,200,500,100);
        answer_labelB.setBackground(new Color(50,50,50));
        answer_labelB.setBackground(new Color(25,255,0));
        answer_labelB.setFont(new Font("Ink Free",Font.PLAIN,30));
        
        answer_labelC.setBounds(125,300,500,100);
        answer_labelC.setBackground(new Color(50,50,50));
        answer_labelC.setBackground(new Color(25,255,0));
        answer_labelC.setFont(new Font("Ink Free",Font.PLAIN,30));
        
        answer_labelD.setBounds(125,400,500,100);
        answer_labelD.setBackground(new Color(50,50,50));
        answer_labelD.setBackground(new Color(25,255,0));
        answer_labelD.setFont(new Font("Ink Free",Font.PLAIN,30));
        
        seconds_left.setBounds(535,510,100,100);
        seconds_left.setBackground(new Color(25,25,25));
        seconds_left.setBackground(new Color(255,0,0));
        seconds_left.setFont(new Font("Ink Free",Font.PLAIN,30));
        seconds_left.setText(String.valueOf(seconds));
        
        time_label.setBounds(535, 475, 100, 25);
        time_label.setBackground(new Color(50,50,50));
        time_label.setFont(new Font("Ink Free",Font.PLAIN,30));
        time_label.setText("timer");
        
        number_right.setBounds(225, 225, 200, 100);
        number_right.setBackground(new Color(25,25,25));
        number_right.setForeground(new Color(25,255,0));
        number_right.setFont(new Font("Ink Free", Font.PLAIN,50));
        number_right.setEditable(false);
        
        
        frame.add(time_label);
        frame.add(answer_labelA);
        frame.add(answer_labelB);
        frame.add(answer_labelC);
        frame.add(answer_labelD);
        frame.add(buttonA);
        frame.add(buttonB);
        frame.add(buttonC);
        frame.add(buttonD);
        frame.add(textarea);
        frame.add(textfield);
        frame.setVisible(true);
                                }
    public void nextQuestion() {
    	if(index>=total_questions) {
    		results();
    	}
    	else {
    		textfield.setText("Question "+(index+1));
    		textarea.setText(questions[index]);
    		answer_labelA.setText(options[index][0]);
    		answer_labelB.setText(options[index][1]);
    		answer_labelC.setText(options[index][2]);
    		answer_labelD.setText(options[index][3]);
    		
    	}
    }
    @Override
    public void actionPerformed(ActionEvent e) {

    		buttonA.setEnabled(false);
    		buttonB.setEnabled(false);
    		buttonC.setEnabled(false);
    		buttonD.setEnabled(false);
    	
    		if(e.getSource()==buttonA) {
    			answer = 'A';
    			if(answer == answers[index]) {
    				correct_guesses++;
    			}
    		}
    			
    		if(e.getSource()==buttonB) {
        		answer = 'B';
        		if(answer == answers[index]) {
        			correct_guesses++;
        		}
        		
    		}
    		if(e.getSource()==buttonC) {
        		answer = 'C';
        		if(answer == answers[index]) {
        			correct_guesses++;
        		}
        		
    		}
    		if(e.getSource()==buttonD) {
        		answer = 'D';
        		if(answer == answers[index]) {
        			correct_guesses++;
        		}
        		
    		}
    		displayAnswer();
    		
    }
    public void displayAnswer() {

    		buttonA.setEnabled(false);
    		buttonB.setEnabled(false);
    		buttonC.setEnabled(false);
    		buttonD.setEnabled(false);
    		
    		if(answers[index] != 'A')
    			answer_labelA.setForeground(new Color(255,0,0));
    		if(answers[index] != 'B')
    			answer_labelB.setForeground(new Color(255,0,0));
    		if(answers[index] != 'C')
    			answer_labelC.setForeground(new Color(255,0,0));
    		if(answers[index] != 'D')
    			answer_labelD.setForeground(new Color(255,0,0));
    		
    }
    public void results(){
    		
    		buttonA.setEnabled(false);
    		buttonB.setEnabled(false);
    		buttonC.setEnabled(false);
    		buttonD.setEnabled(false);
    		
    		result = (int)((correct_guesses/(double)total_questions)*100);
    		
    		textfield.setText("RESULTS!");
    		textarea.setText("");
    		answer_labelA.setText("");
    		answer_labelB.setText("");
    		answer_labelC.setText("");
    		answer_labelD.setText("");
    		
    		number_right.setText("("+correct_guesses+"/"+total_questions+")");
    		percentage.setText(result+"%");
    		
    		frame.add(percentage);
    		frame.add(number_right);	
    		
    }
}
